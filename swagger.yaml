swagger: '2.0'
info:
  version: '1.0'
  title: "Webhook Relay"
  description: |
    # Introduction
    Fast, secure tunnels to your internal networks. [Webhook Relay](https://webhookrelay.com) allows you to expose your localhost 
    or any other server in private network to the public internet without configuring port forwarding 
    or firewalls. 
    This API is documented in **Swagger format**. Webhook Relay allows to dynamically configure your tunnels and webhook forwarding.
        
    # Available authentication methods
    Webhook Relay offers three forms of authentication:
      - **Basic Auth** - only available for non-OAuth accounts. Use your username and password.
      - **API Key** - available for all accounts, token pairs can be generated [here](https://my.webhookrelay.com/tokens)
      - **JWT** - mainly used by the [admin dashboard](https://my.webhookrelay.com) with a 'Authorization Bearer: token' 
   
  termsOfService: "https://webhookrelay.com/tos/"
  contact:
    email: "support@webhookrelay.com"
externalDocs:
  description: Find out more in the official documentation.
  url: 'https://webhookrelay.com/v1/guide/'
host: my.webhookrelay.com
basePath: /
schemes:
- "https"
consumes:
- application/json
produces:
- application/json
tags:
  - name: Tokens
    description: Token key & secret pairs are used to authenticate your API calls or for agents to subscribe to webhook forwarding or open tunnels.
  - name: Buckets
    description: Input and output grouping. Bucket allows to have multiple endpoints for the same destination or multiple destinations for fan-out style webhook forwarding.
  - name: Outputs
    description: Outputs are destinations, where your webhooks will be forwarded. Public destinations do not require agents to be running. Internal outputs will not work without an agent.
  - name: Inputs
    description: "Inputs are your public endpoints. Each input serves as an inbox that you can supply to your webhooks producer (ie: Github, Docker, IFTTT)"
  - name: Tunnels
    description: |
      Tunnels allow remote access to internal web services such as local Wordpress, Jekyll or Hexo. Recommended `crypto` options are `flexible` or `tls-pass-through`.  
        
x-tagGroups:
  - name: Authentication
    tags:
      - Tokens
  - name: Webhook Forwarding
    tags:
      - Buckets
      - Outputs
      - Inputs
  - name: Tunneling
    tags:
      - Tunnels
paths:
  /v1/tunnels:
    x-summary: List and create tunnels
    get:
      tags:
        - "Tunnels"
      summary: List All Tunnels
      responses:
        200:
          description: Successful Response
          schema:
            type: array
            items:
              $ref: '#/definitions/Tunnel'
          examples:
            application/json:
              - id: 'b3237483-e96e-4f3a-905c-0d9603d66c1f'
                created_at: 1534409264
                updated_at: 1534409264
                name: 'tunnel-x'
                destination: 'http://localhost:4000'
                host: 'tunnelx.webrelay.io'
    post:
      tags:
        - "Tunnels"
      description: >-
        You may create your own tunnel using this action. It takes a JSON
        object containing a tunnel request with a specified destination. Paid plans
        have an option to specify either encryption, subdomain or full domain.
      summary: Create a New Tunnel
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Tunnel'
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/Tunnel'
          examples:
            description: "Create a tunnel with a custom subdomain"
            application/json:
                id: b3237483-e96e-4f3a-905c-0d9603d66c1f
                created_at: 1534409264
                updated_at: 1534409264
                name: 'tunnel-x'
                destination: 'http://localhost:4000'
                host: 'tunnelx.webrelay.io'
        400:
          description: "Invalid tunnel request supplied"
  /v1/tunnels/{tunnelID}:
    x-summary: Get, update and delete tunnels
    parameters:
      - name: "tunnelID"
        in: "path"
        description: "ID of tunnel to return"
        required: true
        type: "string"
    get:
      tags:
        - "Tunnels"
      summary: Get Tunnel Details
      responses:
        200:
          description: Successful Response
          schema:
             $ref: "#/definitions/Tunnel"
          examples:
            application/json:
              created_at: 1534409264
              updated_at: 1534409264
              id: b3237483-e96e-4f3a-905c-0d9603d66c1f
              destination: http://localhost:8090
              name: tunnel
              group: ''
              addr: ''
              host: tunnelx.webrelay.io
              mode: active
              protocol: http
              account_id: bd7e1dfc-54c8-408c-a885-7498bf1d8522
              description: ''
              features: 
              auth:
                created_at: 1534409264
                updated_at: 1534409264
                id: eb3fbc49-0713-48b1-8971-a7c4a9c64dfb
                type: none
              agent_id: ''
              ingress_rules: 
              crypto: 'off'
        404:
          description: Tunnel not found
    put:
      tags:
        - "Tunnels"
      summary: Update Tunnel Details
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Tunnel'
      responses:
        200:
          description: Successful Response
          schema:
             $ref: "#/definitions/Tunnel"
          examples:
            application/json:
              created_at: 1534409264
              updated_at: 1534409264
              id: b3237483-e96e-4f3a-905c-0d9603d66c1f
              destination: http://localhost:8090
              name: tunnel
              group: ''
              addr: ''
              host: tunnelx.webrelay.io
              mode: active
              protocol: http
              account_id: bd7e1dfc-54c8-408c-a885-7498bf1d8522
              description: ''
              features: 
              auth:
                created_at: 1534409264
                updated_at: 1534409264
                id: eb3fbc49-0713-48b1-8971-a7c4a9c64dfb
                type: none
              agent_id: ''
              ingress_rules: 
              crypto: 'off'
        404:
          description: Tunnel not found
        400:
          description: Bad request (check response message)
    delete:
      tags:
        - "Tunnels"
      summary: Delete Tunnel
      responses:
        200:
          description: Successful Response          
        404:
          description: Tunnel not found        
  # Token configuration
  /v1/tokens:
    x-summary: List and create tunnels
    get:
      tags:
        - "Tokens"
      summary: List All Authentication Tokens
      responses:
        200:
          description: Successful Response
          schema:
            type: array
            items:
              $ref: '#/definitions/Token'
          examples:
            application/json:
              - created_at: 1535232797
                updated_at: 1540394529
                last_login: 3 days ago
                id: 0a8dd8b4-aaaa-rrrr-dddd-ccc860e3005a
                description: linux cli
                scopes:
                  buckets: []
                  tunnels: []
                active: true
                api_access: enabled

          
    post:
      tags:
        - "Tokens"
      summary: Create a New Authentication Token
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Token'
      responses:
        201:
          description: 'Create a new token'
          schema:
            $ref: '#/definitions/TokenCreateResponse'
          examples:
            application/json:                          
              key: cc58c9ea-5fa7-466e-91dc-5c08d0b1127c
              secret: very-secret
        400:
          description: ''
  /v1/tokens/{tokenID}: 
    x-summary: Update and delete tokens
    parameters:
      - name: "tokenID"
        in: "path"
        description: "ID of token"
        required: true
        type: "string"
    put:
      tags:
        - "Tokens"
      summary: Update Token Details
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Token'
      responses:
        200:
          description: Successful Response
          schema:
             $ref: "#/definitions/Token"
          examples:
            application/json:
              application/json:                
              created_at: 1535365683
              updated_at: 1536161359              
              id: cc58c9ea-5fa7-466e-91dc-5c08d0b1127c
              description: ''
              scopes:
                buckets: []
                tunnels:
                - foo
                - bar
                - faa                
              active: true
              api_access: "enabled"
        404:
          description: Tunnel not found
        400:
          description: Bad request (check response message)
    delete:
      tags:
        - "Tokens"
      summary: Delete Token
      responses:
        200:
          description: Successful Response          
        404:
          description: Token not found
  # Bucket configuration
  /v1/buckets:
    x-summary: List and create buckets
    get:
      tags:
        - "Buckets"
      summary: List All Buckets
      responses:
        200:
          description: Successful Response
          schema:
            type: array
            items:
              $ref: '#/definitions/Bucket'
          examples:
            examples:
              application/json:
                - created_at: 1496610194
                  updated_at: 1532192772
                  id: 339ed2e3-70cf-4a81-8db8-e95a9251155d
                  name: webhook-demo
                  description: auto-created input for http://localhost:8090/webhook
                  suspended: false
                  account_id: bd7e1dfc-54c8-408c-a885-7498bf1d8522
                  auth:
                    created_at: -62135596800
                    updated_at: -62135596800
                    id: ''
                    type: none
                  inputs:
                  - created_at: 1496610195
                    updated_at: 1496610195
                    id: 5e722a5e-f3d9-4eec-9e9f-79f1158e4b10
                    name: ingress for http://localhost:8090/webhook
                    bucket_id: 339ed2e3-70cf-4a81-8db8-e95a9251155d
                    description: auto-created input for http://localhost:8090/webhook
                    created_by: ''
                  outputs:
                  - created_at: 1496610196
                    updated_at: 1496610196
                    id: 3ec1899c-7069-4f55-88c6-5d8f5da4fa30
                    name: http://localhost:8090/webhook
                    bucket_id: 339ed2e3-70cf-4a81-8db8-e95a9251155d
                    destination: http://localhost:8090/webhook
                    internal: true
                    description: auto-created output for http://localhost:8090/webhook
                    created_by: ''
    post:
      tags:
        - "Buckets"
      description: >-
        You may create your own bucket using this action. It takes a JSON
        object containing a bucket request. Once bucket is created, it gets 
        assigned a default input to accept webhooks but you will still have to 
        create a new output to give it a destination.
      summary: Create a New Bucket
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/BucketRequest'
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/Bucket'          
        400:
          description: "Invalid bucket request supplied"
  
  /v1/buckets/{bucketID}:
    x-summary: Get and delete buckets
    parameters:
      - name: "bucketID"
        in: "path"
        description: "ID of a bucket to return"
        required: true
        type: "string"
    get:
      tags:
        - "Buckets"
      summary: Get Bucket Details
      responses:
        200:
          description: Successful Response
          schema:
             $ref: "#/definitions/Bucket"
          examples:
            application/json:
              created_at: 1496610194
              updated_at: 1532192772
              id: 339ed2e3-70cf-4a81-8db8-e95a9251155d
              name: webhook-demo
              description: auto-created input for http://localhost:8090/webhook
              suspended: false
              account_id: bd7e1dfc-54c8-408c-a885-7498bf1d8522
              auth:
                created_at: -62135596800
                updated_at: -62135596800
                id: ''
                type: none
              inputs:
              - created_at: 1496610195
                updated_at: 1496610195
                id: 5e722a5e-f3d9-4eec-9e9f-79f1158e4b10
                name: ingress for http://localhost:8090/webhook
                bucket_id: 339ed2e3-70cf-4a81-8db8-e95a9251155d
                description: auto-created input for http://localhost:8090/webhook
                created_by: ''
              outputs:
              - created_at: 1496610196
                updated_at: 1496610196
                id: 3ec1899c-7069-4f55-88c6-5d8f5da4fa30
                name: http://localhost:8090/webhook
                bucket_id: 339ed2e3-70cf-4a81-8db8-e95a9251155d
                destination: http://localhost:8090/webhook
                internal: true
                description: auto-created output for http://localhost:8090/webhook
                created_by: ''

        404:
          description: Bucket not found
    delete:
      tags:
        - "Buckets"
      summary: Delete Bucket
      responses:
        200:
          description: Successful Response          
        404:
          description: Bucket not found   

  /v1/buckets/{bucketID}/inputs:
    x-summary: Manage bucket inputs
    parameters:
      - name: "bucketID"
        in: "path"
        description: "ID of a bucket to create input in"
        required: true
        type: "string"
    post:
      tags:
        - "Inputs"
      description: >-
        Create one or more inputs for the bucket to get unique public endpoints.
      summary: Create a New Input
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Input'
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/Input'          
        400:
          description: "Invalid input request supplied"
  /v1/buckets/{bucketID}/inputs/{inputID}:
    x-summary: Manage bucket inputs
    parameters:
      - name: "bucketID"
        in: "path"
        description: "ID of a bucket to create input in"
        required: true
        type: "string"
      - name: "inputID"
        in: "path"
        description: "ID of an input to delete"
        required: true
        type: "string"
    put:
      tags:
        - "Inputs"
      description: >-
        Update input endpoint response code, body or headers.
      summary: Update Input
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Input'
      responses:
        200:
          description: 'Input updated'
          schema:
            $ref: '#/definitions/Input'          
        400:
          description: "Invalid input request supplied"
    delete:
      tags:
        - "Inputs"
      description: >-
        Delete input. Once input is deleted, you will not be able to recreate a new input with the same ID.
      summary: Delete Input      
      responses:
        200:
          description: ''
        404:
          description: "Input or Bucket not found"
  # Outputs
  /v1/buckets/{bucketID}/outputs:
    x-summary: Manage bucket outputs
    parameters:
      - name: "bucketID"
        in: "path"
        description: "ID of a bucket to create output in"
        required: true
        type: "string"
    post:
      tags:
        - "Outputs"
      description: >-
        Create one or more outputs for the bucket to start forwarding webhooks to those destinations.
      summary: Create a New Output
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Output'
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/Output'          
        400:
          description: "Invalid output request supplied"
  /v1/buckets/{bucketID}/outputs/{outputID}:
    x-summary: Manage bucket outputs
    parameters:
      - name: "bucketID"
        in: "path"
        description: "ID of a bucket to create input in"
        required: true
        type: "string"
      - name: "outputID"
        in: "path"
        description: "ID of an output to manage"
        required: true
        type: "string"
    put:
      tags:
        - "Outputs"
      description: >-
        Update output destination or make it public/internal.
      summary: Update Output
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Output'
      responses:
        200:
          description: 'Output updated'
          schema:
            $ref: '#/definitions/Output'          
        400:
          description: "Invalid output request supplied"
    delete:
      tags:
        - "Outputs"
      summary: Delete Output      
      responses:
        200:
          description: ''
        404:
          description: "Output or Bucket not found"

definitions:
  # --------------------------- tunnels ---------------------------
  Tunnel:
    title: Tunnel
    type: object
    properties:
      id:
        type: string
        readOnly: true
      created_at:
        type: integer
        readOnly: true
      updated_at:
        type: integer
        readOnly: true
      destination:
        type: string
      name:
        type: string
      region:
        type: string
        enum:
          - ""
          - us-west
          - eu
          - au
        description: "Tunnel region"
        example: "au"
      group:
        type: string
        description: Groups allow agents to subscribe to one or more tunnels
      host:
        type: string
      protocol:
        type: string
      description:
        type: string
      auth:
        type: object
        $ref: '#/definitions/TunnelAuth'
      crypto:
        enum:
          - "off"
          - flexible
          - full
          - full-strict
          - tls-pass-through
        type: string
        description: Tunnel encryption type
        example: flexible
    example:
      created_at: 1534409264
      updated_at: 1534409264
      id: b3237483-e96e-4f3a-905c-0d9603d66c1f
      destination: http://localhost:8090
      name: tunnel
      group: ''
      addr: ''
      host: tunnelx.webrelay.io
      protocol: http
      account_id: bd7e1dfc-54c8-408c-a885-7498bf1d8522
      description: ''
      features: 
      auth:
        created_at: 1534409264
        updated_at: 1534409264
        id: eb3fbc49-0713-48b1-8971-a7c4a9c64dfb
        type: none
      agent_id: ''
      ingress_rules: 
      crypto: 'off'

  TunnelAuth:
    title: Tunnel Authentication
    type: object
    properties:
      id:
        type: string
        readOnly: true
      created_at:
        type: integer
        readOnly: true
      updated_at:
        type: integer
        readOnly: true
      type:
        type: string
      username:
        type: string
      password:
        type: string
      token:
        type: string
  # --------------------------- tokens ---------------------------
  Token:
    title: Token
    type: object
    properties:
      id:
        type: string
        readOnly: true
      created_at:
        type: integer
        readOnly: true
      updated_at:
        type: integer
        readOnly: true
      last_login:
        type: string
        readOnly: true
      api_access:
        type: string
        enum:
          - disabled
          - enabled
        description: "Enable/disable API access. If disabled, it can only be used to open tunnel connections or forward webhooks but not change any existing configuration"
        example: "enabled"
      description:
        type: string
      scopes:
        type: object
        $ref: '#/definitions/TokenScopes'

  TokenCreateResponse:
     title: Token Create Response
     type: object
     properties:
      key:
        type: string
        description: "Token key, this is an alias to token ID"
      secret:
        type: string
        description: "This is the only time secret is revealed as it is already encrypted by the system"
  TokenScopes:
    title: TokenScopes
    type: object
    properties:
      tunnels:
        type: array
        items:
          type: string
      buckets:
        type: array
        items:
          type: string
  # --------------------------- buckets ---------------------------
  Headers:
    title: Headers for request/response
    type: object
    # map[string][]string    
    additionalProperties: {}
    description: A hashmap of header keys and a list of values for each string, Go equivalent map[string][]string 
    example:
      Content-Type: 
        - JSON
      Foo:
        - Bar
  BucketRequest:
    title: Bucket create request
    type: object
    properties:
      name:
        type: string        
      description:
        type: string
  Bucket:
    title: Bucket
    type: object
    properties:
      id:
        type: string
        readOnly: true
      created_at:
        type: integer
        readOnly: true
      updated_at:
        type: integer
        readOnly: true
      name:
        type: string
      description:
        type: string
      suspended:
        type: boolean
        readOnly: true
        description: "Indicates that webhooks will not be received due to quota limits"
      stream:
        type: boolean        
        description: "Enable/disabled streaming to WebSocket clients from this bucket"
      ephemeral:
        type: boolean        
        description: "If ephemeral is enabled, Webhook Relay will not persist request body, headers or response details"
      auth:
        type: object
        $ref: '#/definitions/BucketAuth'         
      inputs:
        type: "array"        
        items:
          $ref: "#/definitions/Input"
      outputs:
        type: "array"        
        items:
          $ref: "#/definitions/Output"

  BucketAuth:
    title: BucketAuth
    type: object
    properties:
      id:
        type: string
      created_at:
        type: integer
      updated_at:
        type: integer
      type:
        type: string
      username:
        type: string
      password:
        type: string
      token:
        type: string      

  Input:
    title: Input
    type: object
    properties:
      id:
        type: string
        readOnly: true
      created_at:
        type: integer
        readOnly: true
      updated_at:
        type: integer
        readOnly: true
      name:
        type: string
      headers:
        type: object        
        $ref: "#/definitions/Headers"
      status_code:
        type: integer
        description: Response status code to return when this input receives a webhook
      body:
        type: string
        description: Response body to return when this input receives a webhook
      description:
        type: string
  # Rules https://webhookrelay.com/v1/guide/webhook-forwarding.html#Request-matching-rules
  AndRule:
    title: And Rule
    type: array
    items:
      $ref: '#/definitions/Rules'
  OrRule:
    title: Or Rule
    type: array
    items:
      $ref: '#/definitions/Rules'
  NotRule:
    title: Not Rule
    type: array
    items:
      $ref: '#/definitions/Rules'
  MatchRule:
    title: Match Rule
    type: array
    items:
      $ref: '#/definitions/Rules'
  Rules:
    title: Rules
    type: object
    properties:
      and:
        type: object
        $ref: "#/definitions/AndRule"
      or:
        type: object
        $ref: "#/definitions/OrRule"
      not:
        type: object
        $ref: "#/definitions/NotRule"
      match:
        type: object
        $ref: "#/definitions/MatchRule"
  Output:
    title: Output
    type: object
    properties:
      id:
        type: string
        readOnly: true
      created_at:
        type: integer
        readOnly: true
      updated_at:
        type: integer
        readOnly: true
      bucket_id:
        type: string
        readOnly: true
      name:
        type: string
      internal:
        type: boolean
        description: When internal output receives webhook, it forwards it to any connected agent (relay CLI, Docker agent or WebSocket connection)
      tls_verification:
        type: boolean
        description: Enforce TLS verification where possible (internal relay agent)
      destination:
        type: string
        description: "Destination, where to forward the webhook, such as 'http://localhost:4000'" 
      headers:
        type: object
        description: Headers to override (for example Host)  
        $ref: "#/definitions/Headers"
      rules:
        type: object
        description: Request matching rules, documentation can be found here https://webhookrelay.com/v1/guide/webhook-forwarding.html#Request-matching-rules
        $ref: "#/definitions/Rules"
      description:
        type: string