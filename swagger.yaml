swagger: '2.0'
info:
  version: '1.0'
  title: "Webhook Relay"
  description: >-
    Fast, secure tunnels to your internal networks. Webhook Relay allows you to expose your localhost 
    or any other server in private network to the public internet without configuring port forwarding 
    or firewalls. API accepts username/password, token key/secret pairs and JWT authentication methods.
  # license:
  #   name: Propriatary
  #   url: https://github.com/apiaryio/polls-api/blob/master/LICENSE
host: webhookrelay.apiblueprint.org
basePath: /
schemes:
- "https"
consumes:
- application/json
produces:
- application/json
paths:
  /v1/tunnels:
    x-summary: List and create tunnels
    get:
      tags:
        - "tunnel"
      summary: List All Tunnels
      responses:
        200:
          description: Successful Response
          schema:
            type: array
            items:
              $ref: '#/definitions/Tunnel'
          examples:
            application/json:
              - id: 'b3237483-e96e-4f3a-905c-0d9603d66c1f'
                created_at: 1534409264
                updated_at: 1534409264
                name: 'tunnel-x'
                destination: 'http://localhost:4000'
                host: 'tunnelx.webrelay.io'
    post:
      tags:
        - "tunnel"
      description: >-
        You may create your own tunnel using this action. It takes a JSON
        object containing a tunnel request with a specified destination. Paid plans
        have an option to specify either encryption, subdomain or full domain.
      summary: Create a New Tunnel
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TunnelCreateRequest'
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/Tunnel'
          examples:
            application/json:
                id: b3237483-e96e-4f3a-905c-0d9603d66c1f
                created_at: 1534409264
                updated_at: 1534409264
                name: 'tunnel-x'
                destination: 'http://localhost:4000'
                host: 'tunnelx.webrelay.io'
        400:
          description: "Invalid tunnel request supplied"
  /v1/tunnels/{tunnelID}/:
    x-summary: Get, update and delete tunnels
    parameters:
      - name: "tunnelID"
        in: "path"
        description: "ID of tunnel to return"
        required: true
        type: "string"
    get:
      tags:
        - "tunnel"
      summary: Get Tunnel Details
      responses:
        200:
          description: Successful Response
          schema:
             $ref: "#/definitions/Tunnel"
          examples:
            application/json:
              created_at: 1534409264
              updated_at: 1534409264
              id: b3237483-e96e-4f3a-905c-0d9603d66c1f
              destination: http://localhost:8090
              name: tunnel
              group: ''
              addr: ''
              host: tunnelx.webrelay.io
              mode: active
              protocol: http
              account_id: bd7e1dfc-54c8-408c-a885-7498bf1d8522
              description: ''
              features: 
              auth:
                created_at: 1534409264
                updated_at: 1534409264
                id: eb3fbc49-0713-48b1-8971-a7c4a9c64dfb
                type: none
              agent_id: ''
              ingress_rules: 
              crypto: 'off'
        404:
          description: Tunnel not found
    put:
      tags:
        - "tunnel"
      summary: Update Tunnel Details
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TunnelCreateRequest'
      responses:
        200:
          description: Successful Response
          schema:
             $ref: "#/definitions/Tunnel"
          examples:
            application/json:
              created_at: 1534409264
              updated_at: 1534409264
              id: b3237483-e96e-4f3a-905c-0d9603d66c1f
              destination: http://localhost:8090
              name: tunnel
              group: ''
              addr: ''
              host: tunnelx.webrelay.io
              mode: active
              protocol: http
              account_id: bd7e1dfc-54c8-408c-a885-7498bf1d8522
              description: ''
              features: 
              auth:
                created_at: 1534409264
                updated_at: 1534409264
                id: eb3fbc49-0713-48b1-8971-a7c4a9c64dfb
                type: none
              agent_id: ''
              ingress_rules: 
              crypto: 'off'
        404:
          description: Tunnel not found
        400:
          description: Bad request (check response message)
    delete:
      tags:
        - "tunnel"
      summary: Delete Tunnel
      responses:
        200:
          description: Successful Response          
        404:
          description: Tunnel not found        
  # Token configuration
  /v1/tokens:
    x-summary: List and create tunnels
    get:
      tags:
        - "token"
      summary: List All Authentication Tokens
      responses:
        200:
          description: Successful Response
          schema:
            type: array
            items:
              $ref: '#/definitions/Token'
          examples:
            application/json:
              - created_at: 1535232797
                updated_at: 1540394529
                last_login: 3 days ago
                id: 0a8dd8b4-aaaa-rrrr-dddd-ccc860e3005a
                description: linux cli
                scopes:
                  buckets: []
                  tunnels: []
                active: true
                api_access: enabled

          
    post:
      tags:
        - "token"
      summary: Create a New Authentication Token
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TokenRequest'
      responses:
        201:
          description: 'Create a new token'
          schema:
            $ref: '#/definitions/TokenCreateResponse'
          examples:
            application/json:                
              created_at: 1535365683
              updated_at: 1536161359              
              id: cc58c9ea-5fa7-466e-91dc-5c08d0b1127c
              description: ''
              scopes:
                buckets: []
                tunnels:
                - foo
                - bar
                - faa                
              active: true
              api_disabled: true
        400:
          description: ''
  /v1/tokens/{tokenID}/: 
    x-summary: Update and delete tokens
    parameters:
      - name: "tokenID"
        in: "path"
        description: "ID of token"
        required: true
        type: "string"
    put:
      tags:
        - "token"
      summary: Update Token Details
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TokenRequest'
      responses:
        200:
          description: Successful Response
          schema:
             $ref: "#/definitions/Token"
          examples:
            application/json:
              application/json:                
              created_at: 1535365683
              updated_at: 1536161359              
              id: cc58c9ea-5fa7-466e-91dc-5c08d0b1127c
              description: ''
              scopes:
                buckets: []
                tunnels:
                - foo
                - bar
                - faa                
              active: true
              api_disabled: true
        404:
          description: Tunnel not found
        400:
          description: Bad request (check response message)
    delete:
      tags:
        - "token"
      summary: Delete Token
      responses:
        200:
          description: Successful Response          
        404:
          description: Token not found
  # Bucket configuration
  /v1/buckets:
    x-summary: List and create buckets
    get:
      tags:
        - "bucket"
      summary: List All Buckets
      responses:
        200:
          description: Successful Response
          schema:
            type: array
            items:
              $ref: '#/definitions/Bucket'
          examples:
            examples:
              application/json:
                - created_at: 1496610194
                  updated_at: 1532192772
                  id: 339ed2e3-70cf-4a81-8db8-e95a9251155d
                  name: webhook-demo
                  description: auto-created input for http://localhost:8090/webhook
                  suspended: false
                  account_id: bd7e1dfc-54c8-408c-a885-7498bf1d8522
                  auth:
                    created_at: -62135596800
                    updated_at: -62135596800
                    id: ''
                    type: none
                  inputs:
                  - created_at: 1496610195
                    updated_at: 1496610195
                    id: 5e722a5e-f3d9-4eec-9e9f-79f1158e4b10
                    name: ingress for http://localhost:8090/webhook
                    bucket_id: 339ed2e3-70cf-4a81-8db8-e95a9251155d
                    description: auto-created input for http://localhost:8090/webhook
                    created_by: ''
                  outputs:
                  - created_at: 1496610196
                    updated_at: 1496610196
                    id: 3ec1899c-7069-4f55-88c6-5d8f5da4fa30
                    name: http://localhost:8090/webhook
                    bucket_id: 339ed2e3-70cf-4a81-8db8-e95a9251155d
                    destination: http://localhost:8090/webhook
                    internal: true
                    description: auto-created output for http://localhost:8090/webhook
                    created_by: ''
    post:
      tags:
        - "bucket"
      description: >-
        You may create your own bucket using this action. It takes a JSON
        object containing a bucket request. Once bucket is created, it gets 
        assigned a default input to accept webhooks but you will still have to 
        create a new output to give it a destination.
      summary: Create a New Bucket
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/BucketRequest'
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/Bucket'          
        400:
          description: "Invalid bucket request supplied"
  
  /v1/buckets/{bucketID}/:
    x-summary: Get and delete buckets
    parameters:
      - name: "bucketID"
        in: "path"
        description: "ID of a bucket to return"
        required: true
        type: "string"
    get:
      tags:
        - "bucket"
      summary: Get Bucket Details
      responses:
        200:
          description: Successful Response
          schema:
             $ref: "#/definitions/Bucket"
          examples:
            application/json:
              created_at: 1496610194
              updated_at: 1532192772
              id: 339ed2e3-70cf-4a81-8db8-e95a9251155d
              name: webhook-demo
              description: auto-created input for http://localhost:8090/webhook
              suspended: false
              account_id: bd7e1dfc-54c8-408c-a885-7498bf1d8522
              auth:
                created_at: -62135596800
                updated_at: -62135596800
                id: ''
                type: none
              inputs:
              - created_at: 1496610195
                updated_at: 1496610195
                id: 5e722a5e-f3d9-4eec-9e9f-79f1158e4b10
                name: ingress for http://localhost:8090/webhook
                bucket_id: 339ed2e3-70cf-4a81-8db8-e95a9251155d
                description: auto-created input for http://localhost:8090/webhook
                created_by: ''
              outputs:
              - created_at: 1496610196
                updated_at: 1496610196
                id: 3ec1899c-7069-4f55-88c6-5d8f5da4fa30
                name: http://localhost:8090/webhook
                bucket_id: 339ed2e3-70cf-4a81-8db8-e95a9251155d
                destination: http://localhost:8090/webhook
                internal: true
                description: auto-created output for http://localhost:8090/webhook
                created_by: ''

        404:
          description: Bucket not found
    delete:
      tags:
        - "bucket"
      summary: Delete Bucket
      responses:
        200:
          description: Successful Response          
        404:
          description: Bucket not found   

  /v1/buckets/{bucketID}/inputs:
    x-summary: Manage bucket inputs
    parameters:
      - name: "bucketID"
        in: "path"
        description: "ID of a bucket to create input in"
        required: true
        type: "string"
    post:
      tags:
        - "input"
      description: >-
        Create one or more inputs for the bucket to get unique public endpoints.
      summary: Create a New Input
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/InputRequest'
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/Input'          
        400:
          description: "Invalid input request supplied"
  /v1/buckets/{bucketID}/inputs/{inputID}:
    x-summary: Manage bucket inputs
    parameters:
      - name: "bucketID"
        in: "path"
        description: "ID of a bucket to create input in"
        required: true
        type: "string"
      - name: "inputID"
        in: "path"
        description: "ID of an input to delete"
        required: true
        type: "string"
    delete:
      tags:
        - "input"
      description: >-
        Delete input. Once input is deleted, you will not be able to recreate a new input with the same ID.
      summary: Delete Input      
      responses:
        200:
          description: ''
        404:
          description: "Input or Bucket not found"
  # Outputs
  /v1/buckets/{bucketID}/outputs:
    x-summary: Manage bucket outputs
    parameters:
      - name: "bucketID"
        in: "path"
        description: "ID of a bucket to create output in"
        required: true
        type: "string"
    post:
      tags:
        - "output"
      description: >-
        Create one or more outputs for the bucket to start forwarding webhooks to those destinations.
      summary: Create a New Output
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/OutputRequest'
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/Output'          
        400:
          description: "Invalid output request supplied"
  /v1/buckets/{bucketID}/outputs/{outputID}:
    x-summary: Manage bucket outputs
    parameters:
      - name: "bucketID"
        in: "path"
        description: "ID of a bucket to create input in"
        required: true
        type: "string"
      - name: "outputID"
        in: "path"
        description: "ID of an output to manage"
        required: true
        type: "string"
    put:
      tags:
        - "output"
      description: >-
        Update output destination or make it public/internal.
      summary: Update Output
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/OutputRequest'
      responses:
        200:
          description: 'Output updated'
          schema:
            $ref: '#/definitions/Output'          
        400:
          description: "Invalid output request supplied"
    delete:
      tags:
        - "output"
      summary: Delete Output      
      responses:
        200:
          description: ''
        404:
          description: "Output or Bucket not found"

definitions:
  # --------------------------- tunnels ---------------------------
  Tunnel:
    title: Tunnel
    type: object
    properties:
      id:
        type: string
      created_at:
        type: integer
      updated_at:
        type: integer
      destination:
        type: string
      name:
        type: string
      group:
        type: string
      host:
        type: string
      protocol:
        type: string
      description:
        type: string
      auth:
        type: object
        $ref: '#/definitions/TunnelAuth'
      crypto:
        type: string      
    example:
      created_at: 1534409264
      updated_at: 1534409264
      id: b3237483-e96e-4f3a-905c-0d9603d66c1f
      destination: http://localhost:8090
      name: tunnel
      group: ''
      addr: ''
      host: tunnelx.webrelay.io
      mode: active
      protocol: http
      account_id: bd7e1dfc-54c8-408c-a885-7498bf1d8522
      description: ''
      features: 
      auth:
        created_at: 1534409264
        updated_at: 1534409264
        id: eb3fbc49-0713-48b1-8971-a7c4a9c64dfb
        type: none
      agent_id: ''
      ingress_rules: 
      crypto: 'off'

  TunnelAuth:
    title: Tunnel Authentication
    type: object
    properties:
      id:
        type: string
      created_at:
        type: integer
      updated_at:
        type: integer
      type:
        type: string
      username:
        type: string
      password:
        type: string
      token:
        type: string  
  TunnelCreateRequest:
    title: Tunnel Create Request
    type: object
    properties:
      name:
        type: string
      group:
        type: string
      destination:
        type: string
      subdomain:
        type: string
      host:
        type: string
      crypto:
        type: string
      auth:
        type: object
        $ref: '#/definitions/TunnelAuth'
      description:
        type: string
    required:
      - destination
    example:
      name: tunnel-x
      subdomain: tunnelx
      destination: http://localhost:4000
  TunnelUpdateRequest:
    title: Tunnel Update Request
    type: object
    properties:
      name:
        type: string
      destination:
        type: string      
      crypto:
        type: string
      auth:
        type: object
        $ref: '#/definitions/TunnelAuth'
      description:
        type: string
    example:
      name: tunnel-x
      subdomain: tunnelx
      destination: http://localhost:4000
  # --------------------------- tokens ---------------------------
  Token:
    title: Token
    type: object
    properties:
      id:
        type: string      
      created_at:
        type: integer
      updated_at:
        type: integer
      last_login:
        type: string  
      description:
        type: string
      scopes:
        type: object
        $ref: '#/definitions/TokenScopes'
      api_access:
        type: string

  TokenRequest:
    title: Token Request
    type: object
    properties:
      description:
        type: string
      scopes:
        type: object
        $ref: '#/definitions/TokenScopes'
      api_access:
        type: string
        description: "Can be either 'enabled' or 'disabled'. Tokens with disabled API access can only be used to open tunnels or forward webhooks"
  TokenCreateResponse:
     title: Token Create Response
     type: object
     properties:
      id:
        type: string
        description: "Token ID is used as a key"
      secret:
        type: string
        description: "This is the only time secret is revealed as it is already encrypted by the system"
      created_at:
        type: integer
      updated_at:
        type: integer
      last_login:
        type: string  
      description:
        type: string
      scopes:
        type: object
        $ref: '#/definitions/TokenScopes'
      api_access:
        type: string  
  TokenScopes:
    title: TokenScopes
    type: object
    properties:
      tunnels:
        type: array
        items:
          type: string
      buckets:
        type: array
        items:
          type: string
  # --------------------------- buckets ---------------------------
  BucketRequest:
    title: Bucket create request
    type: object
    properties:
      name:
        type: string        
      description:
        type: string
  Bucket:
    title: Bucket
    type: object
    properties:
      id:
        type: string
      created_at:
        type: integer
      updated_at:
        type: integer
      name:
        type: string
      description:
        type: string
      auth:
        type: object
        $ref: '#/definitions/BucketAuth'         
      inputs:
        type: "array"        
        items:
          $ref: "#/definitions/Input"
      outputs:
        type: "array"        
        items:
          $ref: "#/definitions/Output"

  BucketAuth:
    title: BucketAuth
    type: object
    properties:
      id:
        type: string
      created_at:
        type: integer
      updated_at:
        type: integer
      type:
        type: string
      username:
        type: string
      password:
        type: string
      token:
        type: string      

  Input:
    title: Input
    type: object
    properties:
      id:
        type: string
      created_at:
        type: integer
      updated_at:
        type: integer
      name:
        type: string
      description:
        type: string
  InputRequest:
    title: Input create request
    properties:
      name:
        type: string
      description:
        type: string

  Output:
    title: Output
    type: object
    properties:
      id:
        type: string
      created_at:
        type: integer
      updated_at:
        type: integer
      name:
        type: string
      internal:
        type: boolean
      destination:
        type: string
      description:
        type: string
  OutputRequest:
    title: Output create request
    properties:
      name:
        type: string
      description:
        type: string
      internal:
        type: boolean
      destination:
        type: string
        description: "Destination, where to forward the webhook, such as 'http://localhost:4000'" 
      
  # QuestionRequest:
  #   title: Question Request
  #   type: object
  #   properties:
  #     question:
  #       type: string
  #     choices:
  #       type: array
  #       items:
  #         type: string
  #   required:
  #     - question
  #     - choices
  #   example:
  #     question: Favourite programming language?
  #     choices:
  #       - Swift
  #       - Python
  #       - Objective-C
  #       - Ruby
